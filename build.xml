<project name="Les Batisseurs : Moyen-Age" default="test" basedir=".">

    <!-- Définie des variables pour les différents répertoires et fichiers -->

    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="class"  location="${build}/class"/>
    <property name="lib"  location="${src}/lib"/>
    <property name="javadoc"  location="doc"/>
    <property name="test" value="${build}/test"/>
    <property name="mainClass" value="GameLauncher"/>

    <!-- Supprime les fichiers de la build précédente -->

    <target name="delete" description="Supprime tout les fichiers de la build précédente">
        <delete dir="${build}"/>
        <delete dir="${javadoc}"/>
        <delete dir="${class}"/>
    </target>

    <!-- Crée les dossiers pour stocker les résultats des différentes étapes -->

    <target name="init" depends="delete">
        <!-- Créer l'horodateur -->
        <tstamp/>
        <!-- créer l'aborenscence -->
        <mkdir dir="${build}"/>
        <mkdir dir="${class}"/>
        <mkdir dir="${javadoc}"/>
        <mkdir dir="${test}"/>
    </target>

    <!-- Compile les classes contenues dans ${src} dans ${class} (Package de test compilé dans ${test}) -->

    <target name="compile" depends="init" description="Compile tous les fichiers sources">
        <javac srcdir="${src}" destdir="${class}" includeantruntime="false">
            <exclude name="test/*.java"/>
        </javac>
    </target>

    <!-- Génère la JavaDoc des fichiers dans ${src} et met le résultat dans ${javadoc} -->

    <target name="javadoc" depends="compile" description="Génère la JavaDoc">
        <javadoc author="true"
                 private="true"
                 sourcepath="${src}"
                 excludepackagenames="test"
                 destdir="${javadoc}">
        </javadoc>
    </target>

    <!-- Crée l'archive JAR avec le lanceur du jeu -->

    <target name="jar" depends="javadoc" description="Generate the JAR." >
        <jar jarfile="Batisseurs_MARIE_${DSTAMP}.jar" basedir="${class}">
            <manifest>
                <attribute name="Main-Class" value="${mainClass}"/>
            </manifest>
            <zipfileset src="${src}/lib/hamcrest-core-1.3.jar"/>
            <zipfileset src="${src}/lib/junit-4.12.jar"/>
        </jar>
    </target>

    <!-- Compile le code du package de test et met le résultat dans ${test} -->

    <target name="test-compile" depends="jar" description="Compile toutes les classes de test">
        <javac srcdir="${src}/test" destdir="${test}" includeantruntime="true" >
            <classpath>
                <pathelement location="${src}/lib/hamcrest-core-1.3.jar"/>
                <pathelement location="${src}/lib/junit-4.12.jar"/>
                <pathelement path="${class}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </javac>
    </target>

    <!-- Lance les classes de test -->

    <target name="test" depends="test-compile" description="Lance toutes les classes de test">
        <junit printsummary="on" haltonfailure="off" fork="true" includeantruntime="true">
            <classpath>
                <pathelement location="/lib/hamcrest-core-1.3.jar"/>
                <pathelement location="/lib/junit-4.12.jar"/>
                <pathelement path="${test}"/>
                <pathelement path="${class}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
            <formatter type="brief"/>
            <batchtest todir="${test}">
                <fileset dir="${src}" includes="test/*.java"/>
            </batchtest>
        </junit>
    </target>
    
    

    
    
    
</project>
